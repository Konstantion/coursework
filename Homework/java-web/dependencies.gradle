def springBootVersion = '3.0.1'
def jupiterApiVersion = '5.8.1'
def mockitoJunitJupiterVersion = '4.8.0'

def mockitoInline = '3.11.2'
def mockitoCore = '4.8.0'

def assertjCoreVersion = '3.23.1'
def guavaVersion = '31.1-jre'
def commonsLang3Version = '3.12.0'

def hikariCPVersion = '5.0.1'
def postgresVersion = '42.5.0'

ext.libsDatabase = [
        'hikariCP' : "com.zaxxer:HikariCP:$hikariCPVersion",
        'posgres' : "org.postgresql:postgresql$postgresVersion"
]

ext.libsUtil = [
        'guava' : "com.google.guava:guava:$guavaVersion",
        'commonsLang3' : "org.apache.commons:commons-lang3:$commonsLang3Version"
]

ext.libsSpring = [
        'springBootStarterDataJpa' : "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion",
        'springBootStarterValidation' : "org.springframework.boot:spring-boot-starter-validation:$springBootVersion",
        'springBootStarterWeb': "org.springframework.boot:spring-boot-starter-web:$springBootVersion",
        'springBootStarterSecurity': "org.springframework.boot:spring-boot-starter-security:$springBootVersion",
        'springBootStarterMail' : "org.springframework.boot:spring-boot-starter-mail:$springBootVersion",
        'springBootConfigurationProcessor' : "org.springframework.boot:spring-boot-configuration-processor:$springBootVersion"
]


ext.libsTest = [
        'assertjCore' : "org.assertj:assertj-core:$assertjCoreVersion",
        'jupiterApi' : "org.junit.jupiter:junit-jupiter-api:$jupiterApiVersion",
        'junitJupiterEngine' : "org.junit.jupiter:junit-jupiter-engine:$jupiterApiVersion",
        'mockitoInline' : "org.mockito:mockito-inline:$mockitoInline",
        'mockitoCore' : "org.mockito:mockito-core:$mockitoCore",
        'mockitoJunitJupiter' : "org.mockito:mockito-junit-jupiter:$mockitoJunitJupiterVersion",
        'springBootStarterTest' : "org.springframework.boot:spring-boot-starter-test:$springBootVersion",
        'springSecurityTest' : "org.springframework.security:spring-security-test:$springBootVersion"
]